import vk_api
from vk_api import VkApi
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType, VkBotMessageEvent
from vk_api.utils import get_random_id
from threading import Thread # –ú–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç—å
import requests

token="b2404bfb9a2e571486737e966f628e5faef38be2a82f763e9398ec6563db0aa5a64097133e1ec6bcef3b9"  #–¢–û–ö–ï–ù –ì–†–£–ü–ü–´
group_id = 200012156
vk_session = VkApi(token = token)
longpoll = VkBotLongPoll(vk_session, group_id)
longpollbot = True

helps = '''
üñ•–ö–û–ú–ê–ù–î–´üñ•

üìï /help - –∫–æ–º–∞–Ω–¥—ã
üí£ /spam - —Å–ø–∞–º –∞—Ç–∞–∫–∞ –≤ –±–µ—Å–µ–¥–µ
üî´ /spamuser [–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è] - —Å–ø–∞–º –∞—Ç–∞–∫–∞ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚úè  /ed [—Ç–µ–∫—Å—Ç]- –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
üÜî /id - —É–∑–Ω–∞—Ç—å —Å–≤–æ–π –∞–π–¥–∏
üÜî /ids - —É–∑–Ω–∞—Ç—å –∞–π–¥–∏ –±–µ—Å–µ–¥—ã


'''

message_strike = "–°–ø–∞–º –∞—Ç–∞–∫–∞"

help_list = ("–∫–æ–º–∞–Ω–¥—ã", "—Ö–µ–ª–ø", "help", "–ø–æ–∫–∞–∂–∏ –∫–æ–º–∞–Ω–¥—ã", "command", "–∫–æ–º–∞–Ω–¥–∞", "–Ω–∞—á–∞—Ç—å", "start")

def write_message(sender, message, send):
	if send == 1:
		vk_session.method('messages.send', {'chat_id': sender, 'random_id': get_random_id(), 'message': message})
	elif send == 0:
		vk_session.method('messages.send', {'user_id': sender, 'random_id': get_random_id(), 'message': message})

def execute(event): #–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –ë–ï–°–ï–î–ï
	
	reseived_message = event.message.get("text")
	sender = event.chat_id
	send = 1

	if reseived_message.lower()[0] == "/":
		user = event.message.get("from_id")
		id_message = event.message.get("conversation_message_id")
		reseived_message_new = reseived_message.lower().split("/", 1)
		text = reseived_message_new[1]
		get_user = vk_session.method('users.get', {'user_ids': user, 'fields': "sex"})
		name = get_user[0]["first_name"]

		if not user == 278339864:
			vk_session.method('messages.send', {'chat_id': 146, 'random_id': get_random_id(), 'message': "–ö—Ç–æ-—Ç–æ –Ω–∞–ø–∏—Å–∞–ª –≤ –±–µ—Å–µ–¥–µ!"})

		if text in help_list: #–í–°–ï –ö–û–ú–ê–ù–î–´
			try:
				write_message(sender, helps, send)
			except:
				write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

		elif text == "spam":
			try:
				n = 0
				while n <= 300:
					global message_strike
					message_strike = message_strike
					write_message(sender, message_strike, send)
					n+=1
			except:
				write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

		elif text[0:8] == "spamuser":
			try:
				text = text.lower().split(" ", 1)
				index = text[1]
				n = 0
				write_message(sender, "–°–ø–∞–º –∞—Ç–∞–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!", send)
				while n <= 300:
					#global message_strike
					message_strike = message_strike
					write_message(int(index), message_strike, 0)
					n+=1
			except:
				write_message(sender, "‚ö†–ù–µ—É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–ø–∞–º –∞—Ç–∞–∫—É(", send)

		elif text[0:2] == "ed":
			try:
				text = text.lower().split(" ", 1)
				text = text[1]
				message_strike = text
				write_message(sender, "‚úÖ–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", send)
			except:
				write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

		elif text == "ids":
			messages = f"üÜî–ê–π–¥–∏ –±–µ—Å–µ–¥—ã: {str(sender)}"
			write_message(sender, messages, send)

		elif text == "id":
			messages = f"{name}, –≤–∞—à üÜî: {str(user)}"


		else:
			write_message(sender, "‚ö†–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç!", send)

	else: #–í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ï –° –ö–ù–û–ü–ö–ê–ú–ò
		if "–°–ª–µ–¥—É—é—â–∏–π –º–µ–ºüòπ" in reseived_message: #–ú–ï–ú
			mem.start(sender, reseived_message, send)

		else:
			button.start(sender, send, reseived_message)

def execute2(event): #–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –õ–°
	text = event.message.get("text")
	sender = event.message.get("from_id")
	id_message = event.message.get("id")
	get_user = vk_session.method('users.get', {'user_ids': sender, 'fields': "sex"})
	name = get_user[0]["first_name"]
	send = 0

	if text in help_list: #–í–°–ï –ö–û–ú–ê–ù–î–´
			try:
				write_message(sender, helps, send)
			except:
				write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

	elif text == "/spam":
		try:
			write_message(sender, "‚ö†–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ")
		except:
			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

	elif text[0:9] == "/spamuser":
		try:
			text = text.lower().split(" ", 1)
			index = text[1]
			n = 0
			write_message(sender, "–°–ø–∞–º –∞—Ç–∞–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å!", send)
			while n <= 300:
				global message_strike
				#message_strike = message_strike
				write_message(index, message_strike, send)
				n+=1
		except:
			write_message(sender, "‚ö†–ù–µ—É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Å—Ç–∏ —Å–ø–∞–º –∞—Ç–∞–∫—É(", send)

	elif text[0:3] == "/ed":
		try:
			text = text.lower().split(" ", 1)
			text = text[1]
			message_strike = text
			write_message(sender, "‚úÖ–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω!", send)
		except:
			write_message(sender, "‚ö†–û—à–∏–±–∫–∞!", send)

	elif text == "/ids":
		write_message(sender, "‚ö†–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –±–µ—Å–µ–¥–µ!", send)

	elif text == "/id":
		messages = f"{name}, –≤–∞—à üÜî: {str(sender)}"

	else:
		write_message(sender, "‚ö†–¢–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã –Ω–µ—Ç!", send)
		
while longpollbot:
	try:
		status = vk_session.method('groups.getOnlineStatus', {'group_id': group_id})
		if not status['status'] == "online":
			vk_session.method('groups.enableOnline', {'group_id': group_id})
		for event in longpoll.listen():
			try:
			    if event.type == VkBotEventType.MESSAGE_NEW: #–ö—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –±–æ—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–µ
			    	if event.from_chat and event.message and event.message.get('text'):  #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –ß–ê–¢–ï
			    		Thread(target = execute, args = (event, ), daemon = True).start()

			    	elif event.from_user and event.message and event.message.get('text'):   #–ï–°–õ–ò –ù–ê–ü–ò–°–ê–õ–ò –í –õ–°
			    		Thread(target = execute2, args = (event, ), daemon = True).start()

			    elif event.type == VkBotEventType.GROUP_JOIN: #–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É
			    	sender = event.object.user_id
			    	send = 0
			    	get_user = vk_session.method('users.get', {'user_ids': sender, 'fields': "sex"})
			    	sex = get_user[0]["sex"]
			    	name = get_user[0]["first_name"]
			    	if sex == 2:
			    		message = "üëã–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã –≤—Å—Ç—É–ø–∏–ª –≤ –≥—Ä—É–ø–ø—É!üòÑ"
			    	else:
			    		message = "üëã–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–¥, —á—Ç–æ —Ç—ã –≤—Å—Ç—É–ø–∏–ª–∞ –≤ –≥—Ä—É–ø–ø—É!üòÑ"
			    	write_message(sender, message, send)
			    	message = f"{name}, –≤–æ—Ç –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n{helps}"
			    	write_message(sender, message, send)
			except:
				print("–û—à–∏–±–∫–∞!")    

	except requests.exceptions.ReadTimeout:
		print("\n –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä–∞–º –í–ö \n")
		time.sleep(3)