import vk_api
from vk_api import VkApi
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType, VkBotMessageEvent
from vk_api.utils import get_random_id
import random
import sys

from covid.api import CovId19Data #–ö–û–†–û–ù–ê–í–ò–†–£–°

sys.path.insert(0, "Data/Config")
import connection

token=connection.token  #–¢–û–ö–ï–ù –ì–†–£–ü–ü–´
access_token = connection.access_token
group_id = connection.group_id

vk_session = VkApi(token = token)
vk_session2 = VkApi(token = access_token)
longpoll = VkBotLongPoll(vk_session, group_id)
longpollbot = True

def write_message(sender, message, send):
	if send == 1:
		vk_session.method('messages.send', {'chat_id': sender, 'random_id': get_random_id(), 'message': message})
	elif send == 0:
		vk_session.method('messages.send', {'user_id': sender, 'random_id': get_random_id(), 'message': message})

def start(sender, text, send): #–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–µ –≤ –õ–°
	try:
		res = api.get_stats()
		ru = api.filter_by_country("russia")
		write_message2(sender, "‚ö†–ü–æ–¥–æ–∂–¥–∏—Ç–µ...")
		cov0 = '''
		ü¶†–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª—É—á–∞–µ–≤ –∑–∞—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–ºü¶†
		'''
		cov11 = "\nüåê–í –º–∏—Ä–µ:"
		cov1 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(res['confirmed'])
		cov2 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(res['deaths'])
		cov3 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(res['recovered'])
		cov4 = "\n "
		cov5 = "\nüá∑üá∫–í –†–æ—Å—Å–∏–∏:"
		cov6 = "\nü§í" + "–ó–∞—Ä–∞–∂–µ–Ω–∏–π: " + str(ru['confirmed'])
		cov7 = "\n‚ò†" + "–°–º–µ—Ä—Ç–µ–π: " + str(ru['deaths'])
		cov8 = "\nüíä" + "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: " + str(ru['recovered'])
		cov9 = '''
		‚ö†–í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ –≤–∞—à–µ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ COVID-19, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ –º–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏: –¥–µ—Ä–∂–∏—Ç–µ—Å—å –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ –æ—Ç –æ–∫—Ä—É–∂–∞—é—â–∏—Ö, –Ω–æ—Å–∏—Ç–µ –º–∞—Å–∫—É, —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π—Ç–µ –ø–æ–º–µ—â–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π—Ç–µ –º–µ—Å—Ç —Å–∫–æ–ø–ª–µ–Ω–∏—è –ª—é–¥–µ–π, –º–æ–π—Ç–µ —Ä—É–∫–∏ –∏ –ø—Ä–∏–∫—Ä—ã–≤–∞–π—Ç–µ –Ω–æ—Å –∏ —Ä–æ—Ç —Å–≥–∏–±–æ–º –ª–æ–∫—Ç—è –∏–ª–∏ —Å–∞–ª—Ñ–µ—Ç–∫–æ–π –ø—Ä–∏ –∫–∞—à–ª–µ –∏–ª–∏ —á–∏—Ö–∞–Ω–∏–∏. –°–ª–µ–¥–∏—Ç–µ –∑–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –Ω–∞—Å–µ–ª–µ–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –∏ –º–µ—Å—Ç–∞ —Ä–∞–±–æ—Ç—ã. –ë–µ—Ä–∏–≥–∏—Ç–µ —Å–µ–±—è!
		'''
		cov = cov0 + cov11 + cov1 + cov2 + cov3 + cov4 + cov5 + cov6 + cov7 + cov8 + cov9
	except:
		write_message2(sender, "‚ö†–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.")
	else:
		write_message2(sender, cov)